---
name: Build and push image

on:
  workflow_call:
    inputs:
      argocd_app_name:
        description: ArgoCD app name
        required: true
        type: string
      image_name:
        description: Image name
        required: true
        type: string
      image_tag:
        default: set_tag
        description: Image tag
        required: false
        type: string
      image_tag_prefix:
        description: (Optional) Image tag prefix
        required: false
        type: string
      notify_slack:
        default: 'yes'
        description: Whether or not to notify slack
        required: false
        type: string
      slack_channel_id:
        default: C02A56KCMPG
        description: Slack channel ID
        required: false
        type: string
      slack_channel_name:
        default: eng-platforms-deploy
        description: Slack channel name
        required: false
        type: string
      slack_ts:
        description: Slack timestamp
        required: true
        type: string

    secrets:
      BUILD_ARGS:
        required: true
      GH_PRIVATE_REPO_TOKEN:
        required: true
      PLATFORMS_BOT_AUTH_TOKEN:
        required: true
      ECR_REGISTRY_USERNAME:
        required: true
      ECR_REGISTRY_PASSWORD:
        required: true
      DOCKERHUB_REGISTRY_USERNAME:
        required: true
      DOCKERHUB_REGISTRY_PASSWORD:
        required: true

env:
  ARGOCD_APP_NAME: ${{ inputs.argocd_app_name }}
  DEPLOYMENT_SLACK_CHANNEL_NAME: ${{ inputs.slack_channel_name }}
  DEPLOYMENT_SLACK_CHANNEL_ID: ${{ inputs.slack_channel_id }}
  IMAGE_NAME: ${{ inputs.image_name }}
  SLACK_TS: ${{ inputs.slack_ts }}
  ECR_REGISTRY: 031780582162.dkr.ecr.us-east-1.amazonaws.com
  DOCKERHUB_REGISTRY: videoblocks

jobs:
  set_tag:
    name: Set tag
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.set_tag.outputs.tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set tag output
        id: set_tag
        run: |
            echo "::set-output name=tag::$(date +'%m-%d-%Y')-$(git rev-parse --short HEAD)"

      - name: Show tag output
        id: debug
        run: echo "${{ steps.set_tag.outputs.tag }}"

      - name: Notify slack of a failure
        if: ${{ ! success() }}
        uses: Footage-Firm/platforms-bot-slack-notify-action@1.1.2
        with:
          action: error
          slack_ts: ${{ env.SLACK_TS }}
          repo_name: ${{ github.repository }}
          commit_sha: ${{ github.sha }}
          commit_message: ${{ env.GIT_COMMIT_MESSAGE_SUBJECT }}
          commit_author: ${{ github.actor }}
          platforms_bot_token: ${{ secrets.PLATFORMS_BOT_AUTH_TOKEN }}
          argocd_app: ${{ env.ARGOCD_APP_NAME }}
          channel: ${{ env.DEPLOYMENT_SLACK_CHANNEL_ID }}

  build_and_push:
    strategy:
      matrix:
        platform: [amd64, arm64]
        include:
          - platform: amd64
            platform_title: AMD
            instance_tag: ubuntu-latest
          - platform: arm64
            platform_title: ARM
            instance_tag: arm-compute-vm-runner
    runs-on: ${{ matrix.instance_tag }}
    name: ${{ matrix.platform_title }} build and push
    needs: set_tag
    outputs:
      slack_ts: ${{ steps.set_slack_ts.outputs.slack_ts_amd64 }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Show tag output
        id: debug
        run: echo "${{ needs.set_tag.outputs.tag }}"

      - name: Show git commit data
        uses: rlespinasse/git-commit-data-action@v1.x

      - name: Build and push specifically tagged image
        if: ${{ ! (inputs.image_tag == 'set_tag') }}
        uses: whoan/docker-build-with-cache-action@v5
        with:
          image_tag: ${{ matrix.platform }}-${{ inputs.image_tag }}
          username: ${{ secrets.ECR_REGISTRY_USERNAME }}
          password: ${{ secrets.ECR_REGISTRY_PASSWORD }}
          registry: ${{ env.ECR_REGISTRY }}
          image_name: ${{ env.IMAGE_NAME }}
          build_extra_args: ${{ secrets.BUILD_ARGS }}

      - name: Build and push
        if: ${{ inputs.image_tag == 'set_tag' }}
        uses: whoan/docker-build-with-cache-action@v5
        with:
          image_tag: ${{ matrix.platform }}-${{ needs.set_tag.outputs.tag }},${{ matrix.platform }}-latest
          username: ${{ secrets.ECR_REGISTRY_USERNAME }}
          password: ${{ secrets.ECR_REGISTRY_PASSWORD }}
          registry: ${{ env.ECR_REGISTRY }}
          image_name: ${{ env.IMAGE_NAME }}
          build_extra_args: ${{ secrets.BUILD_ARGS }}

      - name: Login to ECR
        if: ${{ matrix.platform == 'amd64' && inputs.image_tag == 'set_tag' }}
        uses: docker/login-action@v1
        with:
          registry: ${{ env.ECR_REGISTRY }}
          username: ${{ secrets.ECR_REGISTRY_USERNAME }}
          password: ${{ secrets.ECR_REGISTRY_PASSWORD }}

      - name: Login to Dockerhub
        if: ${{ inputs.image_tag == 'set_tag' }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKERHUB_REGISTRY_PASSWORD }}

      - name: Tag and push images
        if: ${{ inputs.image_tag == 'set_tag' }}
        run: |
            # For all platforms: Create a dockerhub specific tag from the image that was built with an ECR registry tag
            docker tag \
              ${{ env.ECR_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.platform }}-${{ needs.set_tag.outputs.tag }} \
              ${{ env.DOCKERHUB_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.platform }}-latest

            docker push ${{ env.DOCKERHUB_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.platform }}-latest

            # Tag and push AMD image without platform prefix for deploy reference
            if [ "${{ matrix.platform }}" == "amd64" ]; then
              docker tag \
                ${{ env.ECR_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ matrix.platform }}-${{ needs.set_tag.outputs.tag }} \
                ${{ env.ECR_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.set_tag.outputs.tag }}

              docker push ${{ env.ECR_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.set_tag.outputs.tag }}
            fi

      - uses: mukunku/tag-exists-action@v1.0.0
        if: ${{ matrix.platform == 'amd64' && inputs.image_tag == 'set_tag' }}
        id: check_tag
        with: 
          tag: ${{ needs.set_tag.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PRIVATE_REPO_TOKEN }}

      - name: Bump version and push tag
        if: ${{ !(steps.check_tag.outputs.exists == 'true') && (matrix.platform == 'amd64') && inputs.image_tag == 'set_tag' }}
        id: tag_version
        uses: mathieudutour/github-tag-action@v5.5
        with:
          custom_tag: ${{ needs.set_tag.outputs.tag }}
          github_token: ${{ secrets.GH_PRIVATE_REPO_TOKEN }}
          tag_prefix: ''

      - name: Notify slack of a cancellation
        if: ${{ cancelled() && (matrix.platform == 'amd64') && (inputs.image_tag == 'set_tag') }}
        uses: Footage-Firm/platforms-bot-slack-notify-action@1.1.2
        with:
          action: error
          slack_ts: ${{ env.SLACK_TS }}
          repo_name: ${{ github.repository }}
          commit_sha: ${{ github.sha }}
          commit_message: ${{ env.GIT_COMMIT_MESSAGE_SUBJECT }}
          commit_author: ${{ github.actor }}
          platforms_bot_token: ${{ secrets.PLATFORMS_BOT_AUTH_TOKEN }}
          argocd_app: ${{ env.ARGOCD_APP_NAME }}
          channel: ${{ env.DEPLOYMENT_SLACK_CHANNEL_ID }}

      - name: Notify slack of a failure
        if: ${{ failure() }}
        uses: Footage-Firm/platforms-bot-slack-notify-action@1.1.2
        with:
          action: error
          slack_ts: ${{ env.SLACK_TS }}
          repo_name: ${{ github.repository }}
          commit_sha: ${{ github.sha }}
          commit_message: ${{ env.GIT_COMMIT_MESSAGE_SUBJECT }}
          commit_author: ${{ github.actor }}
          platforms_bot_token: ${{ secrets.PLATFORMS_BOT_AUTH_TOKEN }}
          argocd_app: ${{ env.ARGOCD_APP_NAME }}
          channel: ${{ env.DEPLOYMENT_SLACK_CHANNEL_ID }}
